{"name":"Application_MultiDb","body":"README\r\n======\r\n\r\nApplication_MultiDb component adds support for multiple master and slave databases in a zend framework application.\r\n\r\n* Relies on Zend_Application_Resource_Multidb\r\n* Supports retrieval of write only, read only or read write database connections \r\n\r\nThe project requires:\r\n==============================\r\n\r\n* PHP >= 5.2.1\r\n* Zend Framework 1.11+\r\n\r\n\r\nQuick Example:\r\n==============================\r\n\r\n\r\n```php\r\n\r\n$dbOptions = array(\r\n\t'db_master1' => array('adapter' => 'pdo_mysql', 'dbname' => 'db1', 'password' => 'XXXX', 'username' => 'webuser', 'write' => 'true', 'read' => 'true'),\r\n\t'db_master2' => array('adapter' => 'pdo_mysql', 'dbname' => 'db2', 'password' => 'XXXX', 'username' => 'webuser', 'write' => 'true', 'read' => 'true'),\r\n\t'db_slave1' => array('adapter' => 'pdo_pgsql', 'dbname' => 'db3', 'password' => 'notthatpublic', 'username' => 'dba', 'write' => 'false', 'read' => 'true')\r\n);\r\n\r\n\r\n$multidb_resource = new Zend_Application_Resource_Multidb(array());\r\n$multidb_resource->setBootstrap($this->bootstrap);\r\n$multidb_resource->setOptions($this->_dbOptions);\r\n$res = $multidb_resource->init();\r\n        \r\n        \r\n$multidb = Application_MultiDb::getInstance();\r\n$multidb->setMultiDbResource($multidb_resource);\r\n\r\n$read_adapter = $multidb->getRandomReadOnlyAdapter();\r\n\r\n```\r\n[![Build Status](https://secure.travis-ci.org/aporat/Application_MultiDb.png)](http://travis-ci.org/aporat/Application_MultiDb)\r\n","tagline":"Zend framework component to work with multiple mysql master and slave database connections","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}